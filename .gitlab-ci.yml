# global default image
image: node:latest

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - ${CI_PROJECT_DIR}/.cache/npm
    - ${CI_PROJECT_DIR}/.cache/electron
    - ${CI_PROJECT_DIR}/.cache/electron-builder
    - ${CI_PROJECT_DIR}/.cache/Cypress

stages:
  - audit
  - lint
  - test
  - docs
  - build

# global defaults
variables:
  npm_config_cache: ${CI_PROJECT_DIR}/.cache/npm
  ELECTRON_CACHE: ${CI_PROJECT_DIR}/.cache/electron
  ELECTRON_BUILDER_CACHE: ${CI_PROJECT_DIR}/.cache/electron-builder
  CYPRESS_CACHE_FOLDER: ${CI_PROJECT_DIR}/.cache/Cypress
  CYPRESS_INSTALL_BINARY: "0"
  CORE_PACKAGES: "@salp/{frontend,application,course-sandbox}"

before_script:
  - npm ci
  - npm run postinstall --unsafe-perm

# jobs
.linting: &linting
  stage: lint
  only:
    - merge_request
  variables:
    LERNA_ARGS: --ignore-prepublish

eslint:core:
  <<: *linting
  script:
    - npx lerna run lint --no-bail --scope=$CORE_PACKAGES -- -- --no-fix

eslint:packages:
  <<: *linting
  script:
    - npx lerna run lint --no-bail --ignore=$CORE_PACKAGES -- -- --no-fix

stylelint:frontend:
  <<: *linting
  script:
    - cd src/frontend/
    - npm run lint:style

test:unit:frontend:
  stage: test
  only:
    refs:
      - branches
      - tags
      - merge_requests
    changes:
      - src/frontend/**/*
  variables:
    NODE_ENV: "test"
  script:
    - cd src/frontend/
    - npm run coverage:unit
  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - src/frontend/coverage/

test:unit:application:
  image: node:11.6
  stage: test
  only:
    refs:
      - branches
      - tags
      - merge_requests
    changes:
      - src/application/**/*
  script:
    - cd src/application/
    - npm run coverage:unit
  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - src/application/coverage/

test:unit:course-sandbox:
  stage: test
  only:
    refs:
      - branches
      - tags
      - merge_requests
    changes:
      - src/course-sandbox/**/*
  variables:
    NODE_ENV: "test"
  script:
    - cd src/course-sandbox/
    - npm run coverage:unit
  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - src/course-sandbox/coverage/

test:unit:packages:
  stage: test
  only:
    refs:
      - branches
      - tags
      - merge_requests
    changes:
      - packages/@salp/**/*
  script:
    - npx lerna run test --no-bail --ignore=$CORE_PACKAGES

test:e2e:frontend:production: &test_e2e_frontend
  image: cypress/base:10
  stage: test
  only:
    refs:
      - branches
      - tags
      - merge_requests
    changes:
      - src/frontend/**/*
  variables:
    CYPRESS_INSTALL_BINARY: ""
    RUNTIME_NODE_ENV: "production"
    COMPILE_MODE: "production"
  script:
    - cd src/frontend/
    - NODE_ENV="$RUNTIME_NODE_ENV" npm run test:e2e -- --mode $COMPILE_MODE
  artifacts:
    expire_in: 1 day
    when: always
    paths:
    - src/frontend/tests/e2e/renderer/screenshots
    - src/frontend/tests/e2e/renderer/videos

test:e2e:frontend:development:
  <<: *test_e2e_frontend
  variables:
    CYPRESS_INSTALL_BINARY: ""
    RUNTIME_NODE_ENV: "production"
    COMPILE_MODE: "development"

npm_audit:
  stage: audit
  only:
    - schedules
  allow_failure: true
  before_script:
    - npm ci
  script:
    - npm audit
    - ./scripts/npm-audit-packages.js

docs:build:
  stage: docs
  only:
    refs:
      - master
    changes:
      - docs/**/*
  before_script:
    - npm ci
  script:
    - npm run docs:build
    - mv docs/.vuepress/dist/ public
  artifacts:
    paths:
      - public/

build:app:linux: &build_app
  image: electronuserland/builder:10
  stage: build
  only:
    - /^release.*$/
  variables:
    BUILD_NUMBER: $CI_COMMIT_SHORT_SHA
  script:
    - npm run build -- -- -- --linux
  artifacts:
    expire_in: 1 week
    paths:
      - src/application/dist/

build:app:windows:
  <<: *build_app
  image: electronuserland/builder:wine
  script:
    - npm run build -- -- -- --windows
